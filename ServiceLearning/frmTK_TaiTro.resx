<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="stt.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="DoiTac.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Nguoidd.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="SDT.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Email.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="NoiDung.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="guna2PictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>